<?xml version="1.0" encoding="UTF-8"?>
 
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
       ">
     
    <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="tcp://0.0.0.0:61616" />
    </bean>
    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory"
        init-method="start" destroy-method="stop">
        <property name="maxConnections" value="8" />
        <property name="connectionFactory" ref="jmsConnectionFactory" />
    </bean>
 
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="pooledConnectionFactory" />
    </bean>
 
    <!-- Discarded decision of moving java code to xml configuration because I am java developer in handling business logic in java code is easier. -->
   <!-- <bean id="vdoxxSocketProcessor" class="com.vdoxx.camel.VdoxxSocketProcessor"/> 
    <camelContext xmlns="http://camel.apache.org/schema/spring">
 
        <route>
            <from uri="netty:tcp://localhost:4209?allowDefaultCodec=false&sync=false" />            
            <process ref="vdoxxSocketProcessor"/>
            <to uri="log:?level=DEBUG&showBody=true" />
            <to uri="jms:queue:VdoxxQueue" />
        </route>
         <route>
            <from uri="jms:queue:VdoxxQueue" />            
            <setHeader headerName="CamelHttpMethod">
                <constant>POST</constant>
            </setHeader>
            <setHeader headerName="CamelHttpMethod">
                <constant>POST</constant>
            </setHeader>
            <to uri="log:?level=DEBUG&showBody=true" />
            <to uri="jms:queue:VdoxxQueue" />
        </route>
 
    </camelContext>-->
 
</beans>
